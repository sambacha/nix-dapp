/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { Nix, NixInterface } from "../Nix";

const _abi = [
  "constructor(address,address)",
  "error CannotExecuteOwnOrder()",
  "error DuplicateOrder()",
  "error InputArraysMismatch()",
  "error NetAmountMismatch(int256,int256)",
  "error NotERC165()",
  "error NotERC721()",
  "error NotMaker()",
  "error NotOwner()",
  "error OrderCanOnlyBeExecutedBySpecifiedTaker(uint256,address)",
  "error OrderExpired(uint256,uint256)",
  "error OrderMaxxed(uint256,uint256,uint256)",
  "error ReentrancyAttempted()",
  "error RoyaltyEngineResultsLengthMismatch(uint256,uint256)",
  "error RoyaltyOverMax(uint256,uint256)",
  "error TokenIdNotFound(uint256,uint256)",
  "error TokenIdsMismatch(uint256,uint256[],uint256[])",
  "error TokenIdsMustBeSortedWithNoDuplicates()",
  "error TokenIdsMustBeSpecifiedForBuyOrSellAll()",
  "error TokenIdsNotSpecified()",
  "error TradeMaxMustBeZeroOrOneForBuyOrSellAll()",
  "error WETHTransferFailure()",
  "error WETHTransferFromFailure()",
  "event OrderAdded(address indexed,uint256 indexed)",
  "event OrderExecuted(address indexed,uint256 indexed,uint256 indexed,uint256[])",
  "event OrderPriceAndExpiryUpdated(address indexed,uint256 indexed)",
  "event OrderUpdated(address indexed,uint256 indexed)",
  "event OwnershipTransferred(address indexed,address indexed)",
  "event ThankYou(uint256)",
  "event TokenAdded(address indexed,uint256 indexed)",
  "event Withdrawn(address indexed,uint256,uint256)",
  "function addOrder(address,address,uint8,uint8,uint256[],uint256,uint256,uint256,uint256,address) payable returns (uint64)",
  "function executeOrders(address[],uint256[],uint256[][],int256,uint256,address) payable",
  "function getLengths() view returns (uint256, uint256)",
  "function getOrder(address,uint256) view returns (tuple(address,address,uint8,uint8,bytes32,uint256,uint64,uint64,uint64,uint64))",
  "function getToken(uint256) view returns (address, uint64, uint64, uint64, uint256)",
  "function getTokenIds(bytes32) view returns (uint256[])",
  "function getTrade(uint256) view returns (address, uint64, uint64, tuple(address,uint64)[])",
  "function onERC721Received(address,address,uint256,bytes) returns (bytes4)",
  "function ordersLength(address) view returns (uint256)",
  "function owner() view returns (address)",
  "function royaltyEngine() view returns (address)",
  "function transferOwnership(address)",
  "function updateOrder(address,uint256,address,uint256[],uint256,uint256,int256,uint256,address) payable",
  "function updateOrderPriceAndExpiry(address,uint256,uint256,uint256,address) payable",
  "function weth() view returns (address)",
  "function withdraw(address,uint256,uint256)",
];

export class Nix__factory {
  static readonly abi = _abi;
  static createInterface(): NixInterface {
    return new utils.Interface(_abi) as NixInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Nix {
    return new Contract(address, _abi, signerOrProvider) as Nix;
  }
}
